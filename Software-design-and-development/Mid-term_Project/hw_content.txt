1. 编写一个函数，计算逻辑表达式的真值表。
逻辑表达式最多有8个输入项，分别为A,B,C,D,E,F,G,H；支持的逻辑运算符按优先级从高到低分别为~（非）、&（与）、^（异或）、|（或）；可使用括号改变计算的顺序。输出结果是一个由'0'或'1'组成的字符串。
例如，逻辑表达式"~A | B & C"的真值表字符串为"11010101"

2. 编写一个函数，根据真值表计算逻辑表达式，以字符串格式输出。
使用Quine-McCluskey算法对逻辑表达式进行化简。

两个函数接口分别为：
std::string expr_to_truthtable(int n, const std::string& expr);
其中n是变量个数，expr是逻辑表达式，返回真值表。
std::string truthtable_to_expr(const std::string& truth_table);
其中truth_table是真值表，返回逻辑表达式。
若参数无效，函数抛出异常。

要求：使用第5讲的测试框架对两个函数进行测试；提交源代码与设计文档。
文档内容包括：设计思路、数据结构与算法、重要的类与函数的说明、测试用例的设计等等，也可以写完成Project的心得体会、经验与教训等。